import string;
import promise;

export {
	loadCode(name : string) -> Promise<i0, string>;
}

js::loadCode(name : string) -> Promise<i0, string> {
	if (isNode()) {
		promise(couldNotLoad)
	} else if (isDeno()) {
		promise(couldNotLoad)
	} else {
		// Browser based
		inline js {
			function(fulfill, reject) {
				var script = document.createElement("script");
				script.type = "text/javascript";

				document.getElementsByTagName("head")[0].appendChild(script);

				if (script.readyState) {
					script.onreadystatechange = function() {
						if (script.readyState == "loaded" || script.readyState == "complete") {
							script.onreadystatechange = null;
							fulfill();
						}
					};
				} else {  //Others
					script.onload = function(){
						fulfill();
					};
				}

				script.src = url;
			}
		} : Promise<i0, string>;
	}
}

couldNotLoad(fulfill : (i0) -> i0, reject : (string) -> i0) -> i0 {
	reject("Not implemented");
}

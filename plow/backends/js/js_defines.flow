import ds/set;
import lingo/flow/javascript_cli_params;

export {
	STANDARD_JS = 0;
	STANDARD_ES6 = 1;
	NODEJS_MODE = 2;
	NWJS_MODE = 3;
	TS_MODE = 4;

	STANDARD_JS_TXT = "Standard JS";
	STANDARD_ES6_TXT = "ES6 JS";
	NODEJS_MODE_TXT = "Node.js";
	NWJS_MODE_TXT = "Node.js, NW.js";
	TS_MODE_TXT = "Typescript";

	JsConfig(
		flowfile : string,
		outputfile : string,
		includes : [string],
		// 0 - standard JS, 1 - standard ES6, 2 - nodejs, 3 - NW.js, 4 - TypeScript
		jsmode : int,
		// Node.js server functionality
		webmodule : bool,
		// Set of names we should export in the global JS namespace
		jslibrary : Set<string>,
		// Name of an object to keep all names we export in the library
		jslibraryObject : string,
		// Generate JS modules
		modules : string,
		// Inject comments into generated code
		comments : bool,
		// Do not remove generated code_*.js files (debug)
		code : bool,
		// Call js-beautify before exit
		beautify : bool,
		// Generate js source map before exit
		sourcemap : bool,
		compress : bool,
		fontconfig : string,
		debug : bool,
		verbose : int,
		readable : bool,
		tsProcess : TypeScriptProcessing,
		callMain : bool,
		keepDebugNewlines : bool,
		// The path to the external JS file with natives.
		// Is inlined into the final assembled JS code.
		externLib : string,
		// Names from the external natives lib.
		externNatives : Set<string>
	);
}

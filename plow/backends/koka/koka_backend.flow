import plow/backends/backend;
import text/blueprint;

export {
	kokaBackend() -> Backend;
	kokaBackendSpec() -> BackendSpec;
}

kokaBackend() -> Backend {
	makeBackend("koka", 
	[
		// Keywords
		"infix", "infixr", "infixl", "prefix", "postfix"
		, "type", "alias"
		, "struct", "enum", "con"
		, "val", "fun", "fn", "extern", "var"
		, "control", "rcontrol", "except"
		, "if", "then", "else", "elif"
		, "return", "match", "with", "in"
		, "forall", "exists", "some"
		, "private", "public", "abstract"
		, "module", "import", "as"
		, "pub"
		, "handler", "handle"
		, "effect", "receffect"
		, "named"
		, "mask"
		, "override"
		, "unsafe"
		, "ambient", "context"
		, "inject"
		, "use", "using"
		, "function"
		, "instance"
		, "interface"
		, "unsafe"
	], 
	// generators
	[

	]
	);
}

kokaBackendSpec() -> BackendSpec {
	makeBackendSpec(kokaBackend(),
		"Flow", "flow-", "",
		[
			// Natives
		]
	)
}

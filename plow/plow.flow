import plow/pexp/parse;
import plow/pexp/pretty;
import plow/dexp/desugar;
import plow/dexp/pretty;
import plow/driver;
import fs/filesystem;
import math/stringmath;

main() {
	file0 = "mini/tests/positions.flow";
	file = "mini/tests/assoc.flow";
	file3 = "mini/tests/hello.flow";
	file1 = "c:/flow9/lib/formats/unicode/unidecode.flow";
	file2 = "c:\\lyceum/components/rhapsode_server/rhapsode_server/api/isams/import_data.flow";
	file5 = "mini/tests";

	includes = strSplit(getUrlParameter("I"), ",");
	allincludes = filter(concat([".", getFlowDir() + "/lib", getFlowDir()], includes), neq(""));

	errors = ref 0;
	cache = makePlowCache(\e -> {
		errors := ^errors + 1;
		println(e);
	}, allincludes);

	t = timestamp();

	if (!isDirectory(file)) {
		d = compilePlow(cache, file);
		prettyDModule(d);
		{}
	} else {
		files = filter(readDirectoryRecursively(file), \f -> endsWith(f, ".flow"));

		iter(files, \fil -> {
			// println(fil);
			if (^errors < 1000) {
				d = compilePlow(cache, fil);
			}
		});	
	};

	println(d2st((timestamp() - t) / 1000.0, 2) + "s");

	quit(0);
}

import plow/bexp/dexp2bexp;
import plow/bexp/bmodule;
import plow/dexp/types;

export {
	dmodule2bmodule(env : BExpEnv, d : DModule) -> BModule;
}

dmodule2bmodule(env : BExpEnv, d : DModule) -> BModule {
	globals = mapTree(d.globals, \gl -> dglobal2bglobal(env, gl));
	BModule(
		d.flowpath,
		d.fullpath,
		d.imports,
		d.forbids,
		d.exported,
		d.structs,
		d.unions,
		makeDFieldMap(d.structs),
		mapTree(d.natives, \nat -> {
			BNative(nat.id, nat.isIo, resolveBType(env, nat.pos, nat.eclass), nat.name, 
				{
					if (nat.fallback) {
						lookupTree(globals, nat.id);
					} else None()
				},
				nat.pos
			)
		}),
		globals,
		d.order
	)
}

dglobal2bglobal(env : BExpEnv, d : DGlobal) -> BGlobal {
	BGlobal(d.id, d.typars, d.recursive, dexp2bexp(env, d.value), resolveBType(env, d.pos, d.eclass), d.pos);
}

import plow/types/type;
import algorithms;

export {
	unresolvedTType(t : TType) -> bool;
}

unresolvedTType(t : TType) -> bool {
	switch (t) {
		TTypeName(id, typars): (id == "" && typars == []) || exists(typars, unresolvedTType);
		TTypeEClass(eclass): true;
		TTypeFunction(args, returnType): exists(args, unresolvedTType) || unresolvedTType(returnType);
		TTypeOverload(unique, overloads): true;
		TTypeSupertype(unique, subtypes, maxed): true;
	}
}

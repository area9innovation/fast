import plow/types/typeenv;
import plow/types/util;
import plow/types/polymorphism;

export {
	// This attempts to resolve a set of subtypes
	resolveTSupertype(env : TTypeEnv, super : TTypeSupertype) -> TType;
}

resolveTSupertype(env : TTypeEnv, super : TTypeSupertype) -> TType {
	namedsupers = foldi(super.subtypes, makeSet(), \i, acc, st -> {
		switch (st) {
			TTypeName(id, typars): {
				supers0 = env.resolveSupertypes(id);
				supers = if (supers0 == []) [id] else supers0;
				supset = buildSet(supers);
				if (i == 0) supset
				else intersectSets(supset, acc)
			}
			default: acc;
		}
	});

	if (sizeSet(namedsupers) == 1) {
		// OK, we found the name we should use
		name = set2array(namedsupers)[0];
		type = instantiateTTypeName(env, name);
		// println(name + " becomes " + prettyTType(type));
		type
	} else {
		super;
	}
}

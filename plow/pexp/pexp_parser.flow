// Produced by  flowcpp gringo/gringo.flow -- file=plow/pexp/pexp.gringo compile=1
import text/gringo/dcode_lib;
import string;

export {
	parse_flow(acc : DParseAcc<?>) -> bool;
}


parse_flow(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		matchString(acc, "\\uFEFF");
		if (addMatched(acc, i2s(acc.i))) {
			if ((parse_ws(acc)) && ((parse_toplevels(acc)) && ((addVerbatim(acc, "module")) && (addVerbatim(acc, "setpos"))))) {
				{
					pushDCheckpoint(acc);
					if (parse_lastLineComment(acc)) {
						discardDCheckpoint(acc)
					} else {
						restoreDCheckpoint(acc)
					};
					discardDCheckpoint(acc)
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_toplevels(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_toplevel(acc)) && ((addVerbatim(acc, "cons")) && ((parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((parse_toplevel(acc)) && (addVerbatim(acc, "cons"))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})) && (parse_optsemi(acc))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_toplevel(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_import(acc)) {
			discardDCheckpoint(acc)
		} else {
			if (parse_export(acc)) {
				discardDCheckpoint(acc)
			} else {
				if (parse_forbid(acc)) {
					discardDCheckpoint(acc)
				} else {
					if (parse_native(acc)) {
						discardDCheckpoint(acc)
					} else {
						if (parse_union(acc)) {
							discardDCheckpoint(acc)
						} else {
							if (parse_global(acc)) {
								discardDCheckpoint(acc)
							} else {
								if (parse_functionOrStruct(acc)) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							}
						}
					}
				}
			}
		}
	}
}

parse_semi(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((if (matchString(acc, ";")) {
			true
		} else {
			{
				addParseError(acc, "Expected \";\"");
				true
			}
		}) && (parse_ws(acc))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_optsemi(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if ((matchString(acc, ";")) && (parse_ws(acc))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		};
		true
	}
}

parse_import(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((matchString(acc, "import")) && ((parse_s(acc)) && ((parse_pathpos(acc)) && ((parse_ws(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "import"))))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_export(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (matchString(acc, "export")) {
			if (addMatched(acc, i2s(acc.i))) {
				if ((parse_ws(acc)) && ((matchString(acc, "{")) && ((parse_ws(acc)) && ((parse_toplevels(acc)) && ((matchString(acc, "}")) && ((parse_ws(acc)) && ((addVerbatim(acc, "export")) && (addVerbatim(acc, "setpos"))))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_forbid(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((matchString(acc, "forbid")) && ((parse_s(acc)) && ((parse_pathpos(acc)) && ((parse_ws(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "forbid"))))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_pathpos(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			{
				acc.starti ::= acc.i;
				if ((if (parse_path(acc)) {
					{
						addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
						true
					}
				} else {
					false
				}) && (addVerbatim(acc, "setpos"))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_path(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((parse_bid(acc)) && (parseStar(acc, \ -> {
			{
				pushDCheckpoint(acc);
				if ((matchString(acc, "/")) && (parse_bid(acc))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_native(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((matchString(acc, "native")) && ((parse_s(acc)) && ((parse_idpos(acc)) && ((matchString(acc, ":")) && ((parse_ws(acc)) && (addVerbatim(acc, "list"))))))) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((matchString(acc, "io")) && ((parse_ws(acc)) && ((addMatched(acc, "io")) && (addVerbatim(acc, "cons"))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				if ((parse_type(acc)) && ((matchString(acc, "=")) && (parse_ws(acc)))) {
					{
						acc.starti ::= acc.i;
						if ((if (parse_nativename(acc)) {
							{
								addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
								true
							}
						} else {
							false
						}) && ((parse_ws(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "native"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_nativename(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((parse_bid(acc)) && (parseStar(acc, \ -> {
			{
				pushDCheckpoint(acc);
				if ((matchString(acc, ".")) && (parse_bid(acc))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_union(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((parse_typename(acc)) && ((matchString(acc, "::=")) && ((parse_ws(acc)) && ((parse_typenames(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "union"))))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_typenames(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_typename(acc)) && ((addVerbatim(acc, "cons")) && (parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",")) && ((parse_ws(acc)) && ((parse_typename(acc)) && (addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ",")) && (parse_ws(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_global(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_idpos(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if ((matchString(acc, "=")) && (parse_ws(acc))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if (if ((parse_brace(acc)) && ((parse_optsemi(acc)) && (addVerbatim(acc, "global")))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((parse_exp(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "global")))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							}
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((matchString(acc, "=")) && ((parse_ws(acc)) && ((parse_brace(acc)) && ((parse_optsemi(acc)) && (addVerbatim(acc, "global_typed"))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((matchString(acc, "=")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "global_typed"))))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							}
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_functionOrStruct(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_idpos(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (parse_lambdatype(acc)) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if (if ((parse_brace(acc)) && ((parse_optsemi(acc)) && (addVerbatim(acc, "fndef_typed")))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((parse_exp(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "fndef_typed")))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									{
										pushDCheckpoint(acc);
										if (if ((parse_semi(acc)) && (addVerbatim(acc, "typedef"))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									}
								}
							}
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((parse_lambdatypeauto(acc)) && ((parse_brace(acc)) && ((parse_optsemi(acc)) && (addVerbatim(acc, "fndef_typed"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((parse_lambdatypeauto(acc)) && ((parse_exp(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "fndef_typed"))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									{
										pushDCheckpoint(acc);
										if (if ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_structargs(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "structdef")))))))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}) {
											discardDCheckpoint(acc)
										} else {
											{
												pushDCheckpoint(acc);
												if (if ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "typedef")))))) {
													discardDCheckpoint(acc)
												} else {
													restoreDCheckpoint(acc)
												}) {
													discardDCheckpoint(acc)
												} else {
													{
														pushDCheckpoint(acc);
														if (if ((matchString(acc, ":")) && ((parse_ws(acc)) && ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_structargs(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && ((parse_semi(acc)) && (addVerbatim(acc, "structdef")))))))))) {
															discardDCheckpoint(acc)
														} else {
															restoreDCheckpoint(acc)
														}) {
															discardDCheckpoint(acc)
														} else {
															restoreDCheckpoint(acc)
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_structargs(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_structarg(acc)) && ((addVerbatim(acc, "cons")) && (parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",")) && ((parse_ws(acc)) && ((parse_structarg(acc)) && (addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ",")) && (parse_ws(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_structarg(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, "mutable")) {
					{
						pushDCheckpoint(acc);
						if ((if (parse_letterOrDigit(acc)) {
							restoreDCheckpoint(acc)
						} else {
							{
								restoreDCheckpoint(acc);
								true
							}
						}) && ((parse_ws(acc)) && ((addMatched(acc, "mutable")) && (addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				if ((parse_idpos(acc)) && ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_type(acc)) && (addVerbatim(acc, "structarg")))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (parse_idpos(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if ((matchString(acc, "=")) && ((parse_ws(acc)) && ((parse_exp(acc)) && (parse_optsemi(acc))))) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((parse_expsemi(acc)) && ((addVerbatim(acc, "sequence")) && ((addVerbatim(acc, "setpos")) && (addVerbatim(acc, "let"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((matchString(acc, "=")) && ((parse_ws(acc)) && ((parse_exp(acc)) && (parse_optsemi(acc)))))))) {
							if (addMatched(acc, i2s(acc.i))) {
								if ((parse_expsemi(acc)) && ((addVerbatim(acc, "sequence")) && ((addVerbatim(acc, "setpos")) && (addVerbatim(acc, "let_typed"))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if (parse_exp1(acc)) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		}
	}
}

parse_exp1(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp2(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, ":=")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp1(acc)) && ((addVerbatim(acc, ":=")) && (addVerbatim(acc, "setpos"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp2(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp3(acc)) {
			if (parseStar(acc, \ -> {
				{
					pushDCheckpoint(acc);
					if (matchString(acc, "|>")) {
						if (addMatched(acc, i2s(acc.i))) {
							if ((addVerbatim(acc, "b2")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp3(acc)) && ((addVerbatim(acc, "|>")) && (addVerbatim(acc, "setpos"))))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				}
			})) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp3(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp4(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, "||")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp3(acc)) && ((addVerbatim(acc, "||")) && (addVerbatim(acc, "setpos"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp4(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp5(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, "&&")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp4(acc)) && ((addVerbatim(acc, "&&")) && (addVerbatim(acc, "setpos"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp5(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp6(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (matchString(acc, "==")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp5(acc)) && ((addVerbatim(acc, "==")) && (addVerbatim(acc, "setpos"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if (matchString(acc, "!=")) {
							if (addMatched(acc, i2s(acc.i))) {
								if ((addVerbatim(acc, "b2")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp5(acc)) && ((addVerbatim(acc, "!=")) && (addVerbatim(acc, "setpos"))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp6(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp7(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (matchString(acc, "<=")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp6(acc)) && ((addVerbatim(acc, "<=")) && (addVerbatim(acc, "setpos"))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if (matchString(acc, "<")) {
							if (addMatched(acc, i2s(acc.i))) {
								if ((addVerbatim(acc, "b1")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp6(acc)) && ((addVerbatim(acc, "<")) && (addVerbatim(acc, "setpos"))))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if (matchString(acc, ">=")) {
									if (addMatched(acc, i2s(acc.i))) {
										if ((addVerbatim(acc, "b2")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp6(acc)) && ((addVerbatim(acc, ">=")) && (addVerbatim(acc, "setpos"))))))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									} else {
										restoreDCheckpoint(acc)
									}
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									{
										pushDCheckpoint(acc);
										if (if (matchString(acc, ">")) {
											if (addMatched(acc, i2s(acc.i))) {
												if ((addVerbatim(acc, "b1")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp6(acc)) && ((addVerbatim(acc, ">")) && (addVerbatim(acc, "setpos"))))))) {
													discardDCheckpoint(acc)
												} else {
													restoreDCheckpoint(acc)
												}
											} else {
												restoreDCheckpoint(acc)
											}
										} else {
											restoreDCheckpoint(acc)
										}) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									}
								}
							}
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp7(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp8(acc)) {
			if (parseStar(acc, \ -> {
				{
					pushDCheckpoint(acc);
					pushDCheckpoint(acc);
					if (if (matchString(acc, "+")) {
						if (addMatched(acc, i2s(acc.i))) {
							if ((addVerbatim(acc, "b1")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp8(acc)) && ((addVerbatim(acc, "+")) && (addVerbatim(acc, "setpos"))))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}) {
						discardDCheckpoint(acc)
					} else {
						{
							pushDCheckpoint(acc);
							if (if (matchString(acc, "-")) {
								if (addMatched(acc, i2s(acc.i))) {
									if ((addVerbatim(acc, "b1")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp8(acc)) && ((addVerbatim(acc, "-")) && (addVerbatim(acc, "setpos"))))))) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						}
					}
				}
			})) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp8(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp9(acc)) {
			if (parseStar(acc, \ -> {
				{
					pushDCheckpoint(acc);
					pushDCheckpoint(acc);
					if (if (matchString(acc, "*")) {
						if (addMatched(acc, i2s(acc.i))) {
							if ((addVerbatim(acc, "b1")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp8(acc)) && ((addVerbatim(acc, "*")) && (addVerbatim(acc, "setpos"))))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}) {
						discardDCheckpoint(acc)
					} else {
						{
							pushDCheckpoint(acc);
							if (if (matchString(acc, "/")) {
								if (addMatched(acc, i2s(acc.i))) {
									if ((addVerbatim(acc, "b1")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp8(acc)) && ((addVerbatim(acc, "/")) && (addVerbatim(acc, "setpos"))))))) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								} else {
									restoreDCheckpoint(acc)
								}
							} else {
								restoreDCheckpoint(acc)
							}) {
								discardDCheckpoint(acc)
							} else {
								{
									pushDCheckpoint(acc);
									if (if (matchString(acc, "%")) {
										if (addMatched(acc, i2s(acc.i))) {
											if ((addVerbatim(acc, "b1")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp8(acc)) && ((addVerbatim(acc, "%")) && (addVerbatim(acc, "setpos"))))))) {
												discardDCheckpoint(acc)
											} else {
												restoreDCheckpoint(acc)
											}
										} else {
											restoreDCheckpoint(acc)
										}
									} else {
										restoreDCheckpoint(acc)
									}) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								}
							}
						}
					}
				}
			})) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp9(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp10(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, ":")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b1")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((addVerbatim(acc, ":")) && (addVerbatim(acc, "setpos"))))))) {
							if (parseStar(acc, \ -> {
								{
									pushDCheckpoint(acc);
									if (matchString(acc, ":")) {
										if (addMatched(acc, i2s(acc.i))) {
											if ((addVerbatim(acc, "b1")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((addVerbatim(acc, ":")) && (addVerbatim(acc, "setpos"))))))) {
												discardDCheckpoint(acc)
											} else {
												restoreDCheckpoint(acc)
											}
										} else {
											restoreDCheckpoint(acc)
										}
									} else {
										restoreDCheckpoint(acc)
									}
								}
							})) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp10(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_exp11(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (matchString(acc, "??")) {
					if (addMatched(acc, i2s(acc.i))) {
						if ((addVerbatim(acc, "b2")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp10(acc)) && ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_exp10(acc)) && ((addVerbatim(acc, "maybe")) && (addVerbatim(acc, "setpos")))))))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exp11(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if ((matchString(acc, "!")) && ((parse_ws(acc)) && ((parse_exp11(acc)) && ((addVerbatim(acc, "__not")) && (addVerbatim(acc, "setpos")))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((matchString(acc, "-")) && ((parse_ws(acc)) && ((parse_exp11(acc)) && ((addVerbatim(acc, "__negate")) && (addVerbatim(acc, "setpos")))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if (parse_lambda(acc)) {
				discardDCheckpoint(acc)
			} else {
				{
					pushDCheckpoint(acc);
					if (if (parse_exp12(acc)) {
						if (parseStar(acc, \ -> {
							{
								pushDCheckpoint(acc);
								pushDCheckpoint(acc);
								if (if (addMatched(acc, i2s(acc.i))) {
									if ((matchString(acc, "(")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exps(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && ((addVerbatim(acc, "call")) && (addVerbatim(acc, "setpos"))))))))) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									if (parse_with(acc)) {
										discardDCheckpoint(acc)
									} else {
										{
											pushDCheckpoint(acc);
											if (if (addMatched(acc, i2s(acc.i))) {
												if ((matchString(acc, ".")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_idpos(acc)) && ((matchString(acc, "::=")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((addVerbatim(acc, "::=")) && (addVerbatim(acc, "setpos")))))))))) {
													discardDCheckpoint(acc)
												} else {
													restoreDCheckpoint(acc)
												}
											} else {
												restoreDCheckpoint(acc)
											}) {
												discardDCheckpoint(acc)
											} else {
												{
													pushDCheckpoint(acc);
													if (if (addMatched(acc, i2s(acc.i))) {
														if ((matchString(acc, ".")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_idpos(acc)) && ((addVerbatim(acc, "dot")) && (addVerbatim(acc, "setpos"))))))) {
															discardDCheckpoint(acc)
														} else {
															restoreDCheckpoint(acc)
														}
													} else {
														restoreDCheckpoint(acc)
													}) {
														discardDCheckpoint(acc)
													} else {
														{
															pushDCheckpoint(acc);
															if (if (addMatched(acc, i2s(acc.i))) {
																if ((matchString(acc, "[")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((matchString(acc, "]")) && ((parse_ws(acc)) && ((addVerbatim(acc, "__index")) && (addVerbatim(acc, "setpos"))))))))) {
																	discardDCheckpoint(acc)
																} else {
																	restoreDCheckpoint(acc)
																}
															} else {
																restoreDCheckpoint(acc)
															}) {
																discardDCheckpoint(acc)
															} else {
																restoreDCheckpoint(acc)
															}
														}
													}
												}
											}
										}
									}
								}
							}
						})) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					} else {
						restoreDCheckpoint(acc)
					}) {
						discardDCheckpoint(acc)
					} else {
						if (parse_exp12(acc)) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}
			}
		}
	}
}

parse_exp12(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "^")) && ((parse_ws(acc)) && ((parse_exp12(acc)) && ((addVerbatim(acc, "__deref")) && (addVerbatim(acc, "setpos")))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if (parse_exp13(acc)) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		}
	}
}

parse_exp13(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			if (matchString(acc, "if")) {
				{
					pushDCheckpoint(acc);
					if ((if (parse_letterOrDigit(acc)) {
						restoreDCheckpoint(acc)
					} else {
						{
							restoreDCheckpoint(acc);
							true
						}
					}) && ((parse_ws(acc)) && ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && (parse_exp(acc))))))))) {
						{
							pushDCheckpoint(acc);
							pushDCheckpoint(acc);
							if (if (if ((matchString(acc, "else")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((addVerbatim(acc, "ifelse")) && (addVerbatim(acc, "setpos")))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}) {
								discardDCheckpoint(acc)
							} else {
								{
									pushDCheckpoint(acc);
									if (if (addMatched(acc, i2s(acc.i))) {
										if ((addVerbatim(acc, "void")) && ((addVerbatim(acc, "setpos")) && ((addVerbatim(acc, "ifelse")) && (addVerbatim(acc, "setpos"))))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									} else {
										restoreDCheckpoint(acc)
									}) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								}
							}) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						}
					} else {
						restoreDCheckpoint(acc)
					}
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			{
				pushDCheckpoint(acc);
				if (if ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((matchString(acc, ")")) && (parse_ws(acc)))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if (addMatched(acc, i2s(acc.i))) {
							if (matchString(acc, "ref")) {
								{
									pushDCheckpoint(acc);
									if ((if (parse_letterOrDigit(acc)) {
										restoreDCheckpoint(acc)
									} else {
										{
											restoreDCheckpoint(acc);
											true
										}
									}) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((addVerbatim(acc, "ref")) && (addVerbatim(acc, "setpos")))))) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								}
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							if (parse_switch(acc)) {
								discardDCheckpoint(acc)
							} else {
								{
									pushDCheckpoint(acc);
									if (if (addMatched(acc, i2s(acc.i))) {
										if (matchString(acc, "cast")) {
											{
												pushDCheckpoint(acc);
												if ((if (parse_letterOrDigit(acc)) {
													restoreDCheckpoint(acc)
												} else {
													{
														restoreDCheckpoint(acc);
														true
													}
												}) && ((parse_ws(acc)) && ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((matchString(acc, "->")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && ((addVerbatim(acc, "cast")) && (addVerbatim(acc, "setpos"))))))))))))) {
													discardDCheckpoint(acc)
												} else {
													restoreDCheckpoint(acc)
												}
											}
										} else {
											restoreDCheckpoint(acc)
										}
									} else {
										restoreDCheckpoint(acc)
									}) {
										discardDCheckpoint(acc)
									} else {
										if (parse_brace(acc)) {
											discardDCheckpoint(acc)
										} else {
											{
												pushDCheckpoint(acc);
												if (if (addMatched(acc, i2s(acc.i))) {
													if (matchString(acc, "true")) {
														{
															pushDCheckpoint(acc);
															if ((if (parse_letterOrDigit(acc)) {
																restoreDCheckpoint(acc)
															} else {
																{
																	restoreDCheckpoint(acc);
																	true
																}
															}) && ((parse_ws(acc)) && ((addVerbatim(acc, "true")) && (addVerbatim(acc, "setpos"))))) {
																discardDCheckpoint(acc)
															} else {
																restoreDCheckpoint(acc)
															}
														}
													} else {
														restoreDCheckpoint(acc)
													}
												} else {
													restoreDCheckpoint(acc)
												}) {
													discardDCheckpoint(acc)
												} else {
													{
														pushDCheckpoint(acc);
														if (if (addMatched(acc, i2s(acc.i))) {
															if (matchString(acc, "false")) {
																{
																	pushDCheckpoint(acc);
																	if ((if (parse_letterOrDigit(acc)) {
																		restoreDCheckpoint(acc)
																	} else {
																		{
																			restoreDCheckpoint(acc);
																			true
																		}
																	}) && ((parse_ws(acc)) && ((addVerbatim(acc, "false")) && (addVerbatim(acc, "setpos"))))) {
																		discardDCheckpoint(acc)
																	} else {
																		restoreDCheckpoint(acc)
																	}
																}
															} else {
																restoreDCheckpoint(acc)
															}
														} else {
															restoreDCheckpoint(acc)
														}) {
															discardDCheckpoint(acc)
														} else {
															{
																pushDCheckpoint(acc);
																if (if (addMatched(acc, i2s(acc.i))) {
																	if ((parse_id(acc)) && ((addVerbatim(acc, "var")) && (addVerbatim(acc, "setpos")))) {
																		discardDCheckpoint(acc)
																	} else {
																		restoreDCheckpoint(acc)
																	}
																} else {
																	restoreDCheckpoint(acc)
																}) {
																	discardDCheckpoint(acc)
																} else {
																	{
																		pushDCheckpoint(acc);
																		if (if (addMatched(acc, i2s(acc.i))) {
																			if ((matchString(acc, "\"#inc")) && ((matchString(acc, "lude")) && ((parse_s(acc)) && ((parse_pathpos(acc)) && ((matchString(acc, "\"")) && ((parse_ws(acc)) && ((addVerbatim(acc, "stringinclude")) && (addVerbatim(acc, "setpos"))))))))) {
																				discardDCheckpoint(acc)
																			} else {
																				restoreDCheckpoint(acc)
																			}
																		} else {
																			restoreDCheckpoint(acc)
																		}) {
																			discardDCheckpoint(acc)
																		} else {
																			{
																				pushDCheckpoint(acc);
																				if (if (addMatched(acc, i2s(acc.i))) {
																					if ((parse_string(acc)) && ((parse_ws(acc)) && ((addVerbatim(acc, "unescape")) && (addVerbatim(acc, "setpos"))))) {
																						discardDCheckpoint(acc)
																					} else {
																						restoreDCheckpoint(acc)
																					}
																				} else {
																					restoreDCheckpoint(acc)
																				}) {
																					discardDCheckpoint(acc)
																				} else {
																					{
																						pushDCheckpoint(acc);
																						if (if (addMatched(acc, i2s(acc.i))) {
																							if (matchString(acc, "0x")) {
																								{
																									acc.starti ::= acc.i;
																									pushDCheckpoint(acc);
																									if ((if (if ((parse_hexdigit(acc)) && (parseStar(acc, \ -> {
																										parse_hexdigit(acc)
																									}))) {
																										discardDCheckpoint(acc)
																									} else {
																										restoreDCheckpoint(acc)
																									}) {
																										{
																											addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
																											true
																										}
																									} else {
																										false
																									}) && ((parse_ws(acc)) && ((addVerbatim(acc, "hex")) && (addVerbatim(acc, "setpos"))))) {
																										discardDCheckpoint(acc)
																									} else {
																										restoreDCheckpoint(acc)
																									}
																								}
																							} else {
																								restoreDCheckpoint(acc)
																							}
																						} else {
																							restoreDCheckpoint(acc)
																						}) {
																							discardDCheckpoint(acc)
																						} else {
																							{
																								pushDCheckpoint(acc);
																								if (if (addMatched(acc, i2s(acc.i))) {
																									{
																										acc.starti ::= acc.i;
																										if ((if (parse_double(acc)) {
																											{
																												addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
																												true
																											}
																										} else {
																											false
																										}) && ((parse_ws(acc)) && ((addVerbatim(acc, "s2d")) && (addVerbatim(acc, "setpos"))))) {
																											discardDCheckpoint(acc)
																										} else {
																											restoreDCheckpoint(acc)
																										}
																									}
																								} else {
																									restoreDCheckpoint(acc)
																								}) {
																									discardDCheckpoint(acc)
																								} else {
																									{
																										pushDCheckpoint(acc);
																										if (if (addMatched(acc, i2s(acc.i))) {
																											{
																												acc.starti ::= acc.i;
																												if ((if (parse_int(acc)) {
																													{
																														addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
																														true
																													}
																												} else {
																													false
																												}) && ((parse_ws(acc)) && ((addVerbatim(acc, "s2i")) && (addVerbatim(acc, "setpos"))))) {
																													discardDCheckpoint(acc)
																												} else {
																													restoreDCheckpoint(acc)
																												}
																											}
																										} else {
																											restoreDCheckpoint(acc)
																										}) {
																											discardDCheckpoint(acc)
																										} else {
																											{
																												pushDCheckpoint(acc);
																												if (if (addMatched(acc, i2s(acc.i))) {
																													if ((matchString(acc, "[")) && ((parse_ws(acc)) && ((parse_exps(acc)) && ((matchString(acc, "]")) && ((parse_ws(acc)) && ((addVerbatim(acc, "array")) && (addVerbatim(acc, "setpos")))))))) {
																														discardDCheckpoint(acc)
																													} else {
																														restoreDCheckpoint(acc)
																													}
																												} else {
																													restoreDCheckpoint(acc)
																												}) {
																													discardDCheckpoint(acc)
																												} else {
																													restoreDCheckpoint(acc)
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

parse_with(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "(")) && ((addVerbatim(acc, "swap")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((matchString(acc, "with")) && ((parse_s(acc)) && ((parse_fields(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && ((addVerbatim(acc, "with")) && (addVerbatim(acc, "setpos")))))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_fields(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_fieldassign(acc)) && ((addVerbatim(acc, "cons")) && (parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",")) && ((parse_ws(acc)) && ((parse_fieldassign(acc)) && (addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ",")) && (parse_ws(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_fieldassign(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((parse_idpos(acc)) && ((matchString(acc, "=")) && ((parse_ws(acc)) && ((parse_exp(acc)) && (addVerbatim(acc, "fieldassign")))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_switch(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if (matchString(acc, "switch")) {
				{
					pushDCheckpoint(acc);
					if ((if (parse_letterOrDigit(acc)) {
						restoreDCheckpoint(acc)
					} else {
						{
							restoreDCheckpoint(acc);
							true
						}
					}) && ((parse_ws(acc)) && ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && ((matchString(acc, "{")) && ((parse_ws(acc)) && ((parse_cases(acc)) && ((if (matchString(acc, "}")) {
						true
					} else {
						{
							addParseError(acc, "Expected \"}\"");
							true
						}
					}) && ((parse_ws(acc)) && ((addVerbatim(acc, "switch")) && (addVerbatim(acc, "setpos"))))))))))))))) {
						discardDCheckpoint(acc)
					} else {
						restoreDCheckpoint(acc)
					}
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_cases(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_defaultOrNamedCase(acc)) && ((addVerbatim(acc, "cons")) && (parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((parse_defaultOrNamedCase(acc)) && (addVerbatim(acc, "cons"))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_defaultOrNamedCase(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			if (matchString(acc, "default")) {
				{
					pushDCheckpoint(acc);
					if ((if (parse_letterOrDigit(acc)) {
						restoreDCheckpoint(acc)
					} else {
						{
							restoreDCheckpoint(acc);
							true
						}
					}) && ((parse_ws(acc)) && ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((parse_optsemi(acc)) && ((addVerbatim(acc, "default")) && (addVerbatim(acc, "setpos"))))))))) {
						discardDCheckpoint(acc)
					} else {
						restoreDCheckpoint(acc)
					}
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			{
				pushDCheckpoint(acc);
				if (if ((parse_idpos(acc)) && ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_names(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((parse_optsemi(acc)) && (addVerbatim(acc, "case")))))))))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}
	}
}

parse_names(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_id(acc)) && ((addVerbatim(acc, "cons")) && (parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",")) && ((parse_ws(acc)) && ((parse_id(acc)) && (addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ",")) && (parse_ws(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_brace(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "{")) && ((parse_ws(acc)) && ((parse_expsemi(acc)) && ((matchString(acc, "}")) && ((parse_ws(acc)) && ((addVerbatim(acc, "sequence")) && (addVerbatim(acc, "setpos")))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_expsemi(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_exp(acc)) && ((addVerbatim(acc, "cons")) && ((parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((parse_optsemi(acc)) && ((parse_exp(acc)) && (addVerbatim(acc, "cons")))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})) && (parse_optsemi(acc))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_lambda(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((parse_backslash(acc)) && ((parse_ws(acc)) && ((parse_lambdaargs(acc)) && ((matchString(acc, "->")) && ((parse_ws(acc)) && ((parse_exp(acc)) && ((addVerbatim(acc, "lambda")) && (addVerbatim(acc, "setpos"))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_lambdaargs(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_lambdaarg(acc)) && ((addVerbatim(acc, "cons")) && (parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",")) && ((parse_ws(acc)) && ((parse_lambdaarg(acc)) && (addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ",")) && (parse_ws(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_lambdaarg(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_id(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_type(acc)) && (addVerbatim(acc, "argtype"))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if (addMatched(acc, i2s(acc.i))) {
							if ((addVerbatim(acc, "auto")) && ((addVerbatim(acc, "setpos")) && (addVerbatim(acc, "argtype")))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_lambdatype(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_lambdaargs(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && ((matchString(acc, "->")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((addVerbatim(acc, "fntype")) && (addVerbatim(acc, "setpos"))))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_lambdatypeauto(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_lambdaargs(acc)) && ((matchString(acc, ")")) && (parse_ws(acc)))))) {
				if (addMatched(acc, i2s(acc.i))) {
					if ((addVerbatim(acc, "auto")) && ((addVerbatim(acc, "setpos")) && ((addVerbatim(acc, "fntype")) && (addVerbatim(acc, "setpos"))))) {
						discardDCheckpoint(acc)
					} else {
						restoreDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_exps(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_exp(acc)) && ((addVerbatim(acc, "cons")) && (parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",")) && ((parse_ws(acc)) && ((parse_exp(acc)) && (addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ",")) && (parse_ws(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_idpos(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((parse_id(acc)) && (addVerbatim(acc, "setpos"))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_type(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (matchString(acc, "bool")) {
					{
						pushDCheckpoint(acc);
						if ((if (parse_letterOrDigit(acc)) {
							restoreDCheckpoint(acc)
						} else {
							{
								restoreDCheckpoint(acc);
								true
							}
						}) && ((parse_ws(acc)) && ((addVerbatim(acc, "bool")) && (addVerbatim(acc, "setpos"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if (matchString(acc, "int")) {
							{
								pushDCheckpoint(acc);
								if ((if (parse_letterOrDigit(acc)) {
									restoreDCheckpoint(acc)
								} else {
									{
										restoreDCheckpoint(acc);
										true
									}
								}) && ((parse_ws(acc)) && ((addVerbatim(acc, "int")) && (addVerbatim(acc, "setpos"))))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if (matchString(acc, "double")) {
									{
										pushDCheckpoint(acc);
										if ((if (parse_letterOrDigit(acc)) {
											restoreDCheckpoint(acc)
										} else {
											{
												restoreDCheckpoint(acc);
												true
											}
										}) && ((parse_ws(acc)) && ((addVerbatim(acc, "double")) && (addVerbatim(acc, "setpos"))))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									}
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									{
										pushDCheckpoint(acc);
										if (if (matchString(acc, "string")) {
											{
												pushDCheckpoint(acc);
												if ((if (parse_letterOrDigit(acc)) {
													restoreDCheckpoint(acc)
												} else {
													{
														restoreDCheckpoint(acc);
														true
													}
												}) && ((parse_ws(acc)) && ((addVerbatim(acc, "string")) && (addVerbatim(acc, "setpos"))))) {
													discardDCheckpoint(acc)
												} else {
													restoreDCheckpoint(acc)
												}
											}
										} else {
											restoreDCheckpoint(acc)
										}) {
											discardDCheckpoint(acc)
										} else {
											{
												pushDCheckpoint(acc);
												if (if (matchString(acc, "flow")) {
													{
														pushDCheckpoint(acc);
														if ((if (parse_letterOrDigit(acc)) {
															restoreDCheckpoint(acc)
														} else {
															{
																restoreDCheckpoint(acc);
																true
															}
														}) && ((parse_ws(acc)) && ((addVerbatim(acc, "flow")) && (addVerbatim(acc, "setpos"))))) {
															discardDCheckpoint(acc)
														} else {
															restoreDCheckpoint(acc)
														}
													}
												} else {
													restoreDCheckpoint(acc)
												}) {
													discardDCheckpoint(acc)
												} else {
													{
														pushDCheckpoint(acc);
														if (if (matchString(acc, "void")) {
															{
																pushDCheckpoint(acc);
																if ((if (parse_letterOrDigit(acc)) {
																	restoreDCheckpoint(acc)
																} else {
																	{
																		restoreDCheckpoint(acc);
																		true
																	}
																}) && ((parse_ws(acc)) && ((addVerbatim(acc, "voidtype")) && (addVerbatim(acc, "setpos"))))) {
																	discardDCheckpoint(acc)
																} else {
																	restoreDCheckpoint(acc)
																}
															}
														} else {
															restoreDCheckpoint(acc)
														}) {
															discardDCheckpoint(acc)
														} else {
															{
																pushDCheckpoint(acc);
																if (if (matchString(acc, "auto")) {
																	{
																		pushDCheckpoint(acc);
																		if ((if (parse_letterOrDigit(acc)) {
																			restoreDCheckpoint(acc)
																		} else {
																			{
																				restoreDCheckpoint(acc);
																				true
																			}
																		}) && ((parse_ws(acc)) && ((addVerbatim(acc, "auto")) && (addVerbatim(acc, "setpos"))))) {
																			discardDCheckpoint(acc)
																		} else {
																			restoreDCheckpoint(acc)
																		}
																	}
																} else {
																	restoreDCheckpoint(acc)
																}) {
																	discardDCheckpoint(acc)
																} else {
																	{
																		pushDCheckpoint(acc);
																		if (if (matchString(acc, "native")) {
																			{
																				pushDCheckpoint(acc);
																				if ((if (parse_letterOrDigit(acc)) {
																					restoreDCheckpoint(acc)
																				} else {
																					{
																						restoreDCheckpoint(acc);
																						true
																					}
																				}) && ((parse_ws(acc)) && ((addVerbatim(acc, "nativetype")) && (addVerbatim(acc, "setpos"))))) {
																					discardDCheckpoint(acc)
																				} else {
																					restoreDCheckpoint(acc)
																				}
																			}
																		} else {
																			restoreDCheckpoint(acc)
																		}) {
																			discardDCheckpoint(acc)
																		} else {
																			{
																				pushDCheckpoint(acc);
																				if (if (matchString(acc, "ref")) {
																					{
																						pushDCheckpoint(acc);
																						if ((if (parse_letterOrDigit(acc)) {
																							restoreDCheckpoint(acc)
																						} else {
																							{
																								restoreDCheckpoint(acc);
																								true
																							}
																						}) && ((parse_ws(acc)) && ((parse_type(acc)) && ((addVerbatim(acc, "reftype")) && (addVerbatim(acc, "setpos")))))) {
																							discardDCheckpoint(acc)
																						} else {
																							restoreDCheckpoint(acc)
																						}
																					}
																				} else {
																					restoreDCheckpoint(acc)
																				}) {
																					discardDCheckpoint(acc)
																				} else {
																					restoreDCheckpoint(acc)
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if (parse_fntype(acc)) {
				discardDCheckpoint(acc)
			} else {
				if (parse_typename(acc)) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if (addMatched(acc, i2s(acc.i))) {
							if ((matchString(acc, "[")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((matchString(acc, "]")) && ((parse_ws(acc)) && ((addVerbatim(acc, "arraytype")) && (addVerbatim(acc, "setpos")))))))) {
								discardDCheckpoint(acc)
							} else {
								restoreDCheckpoint(acc)
							}
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if (addMatched(acc, i2s(acc.i))) {
									{
										acc.starti ::= acc.i;
										pushDCheckpoint(acc);
										if ((if (if ((matchString(acc, "?")) && (parseStar(acc, \ -> {
											matchString(acc, "?")
										}))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}) {
											{
												addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
												true
											}
										} else {
											false
										}) && ((parse_ws(acc)) && ((addVerbatim(acc, "polytype")) && (addVerbatim(acc, "setpos"))))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									}
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}
							}
						}
					}
				}
			}
		}
	}
}

parse_fntype(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addMatched(acc, i2s(acc.i))) {
			if ((matchString(acc, "(")) && ((parse_ws(acc)) && ((parse_argtypes(acc)) && ((matchString(acc, ")")) && ((parse_ws(acc)) && ((matchString(acc, "->")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((addVerbatim(acc, "fntype")) && (addVerbatim(acc, "setpos"))))))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_argtypes(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_argtype(acc)) && ((addVerbatim(acc, "cons")) && (parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",")) && ((parse_ws(acc)) && ((parse_argtype(acc)) && (addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ",")) && (parse_ws(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_argtype(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (addMatched(acc, i2s(acc.i))) {
			if ((parse_id(acc)) && ((matchString(acc, ":")) && ((parse_ws(acc)) && ((parse_type(acc)) && ((addVerbatim(acc, "argtype")) && (addVerbatim(acc, "setpos"))))))) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			{
				pushDCheckpoint(acc);
				if (if ((parse_type(acc)) && ((addMatched(acc, "")) && ((addVerbatim(acc, "swap")) && (addVerbatim(acc, "argtype"))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}
	}
}

parse_typename(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((parse_idpos(acc)) && ((parse_typars(acc)) && (addVerbatim(acc, "typename")))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_typars(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if ((matchString(acc, "<")) && ((parse_ws(acc)) && ((parse_types(acc)) && ((matchString(acc, ">")) && (parse_ws(acc)))))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			if (addVerbatim(acc, "list")) {
				discardDCheckpoint(acc)
			} else {
				restoreDCheckpoint(acc)
			}
		}
	}
}

parse_types(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (addVerbatim(acc, "list")) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if ((parse_type(acc)) && ((addVerbatim(acc, "cons")) && (parseStar(acc, \ -> {
					{
						pushDCheckpoint(acc);
						if ((matchString(acc, ",")) && ((parse_ws(acc)) && ((parse_type(acc)) && (addVerbatim(acc, "cons"))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				})))) {
					{
						pushDCheckpoint(acc);
						pushDCheckpoint(acc);
						if (if ((matchString(acc, ",")) && (parse_ws(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						};
						discardDCheckpoint(acc)
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_hexdigit(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (matchRange(acc, 48, 57)) {
			discardDCheckpoint(acc)
		} else {
			if (matchRange(acc, 97, 102)) {
				discardDCheckpoint(acc)
			} else {
				if (matchRange(acc, 65, 70)) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}
	}
}

parse_id(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		acc.starti ::= acc.i;
		if ((if (parse_bid(acc)) {
			{
				addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
				true
			}
		} else {
			false
		}) && (parse_ws(acc))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_bid(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if ((if (matchRange(acc, 97, 122)) {
			discardDCheckpoint(acc)
		} else {
			if (matchRange(acc, 65, 90)) {
				discardDCheckpoint(acc)
			} else {
				if (matchString(acc, "_")) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}) && (parseStar(acc, \ -> {
			parse_letterOrDigit(acc)
		}))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_letterOrDigit(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (matchRange(acc, 97, 122)) {
			discardDCheckpoint(acc)
		} else {
			if (matchRange(acc, 65, 90)) {
				discardDCheckpoint(acc)
			} else {
				if (matchString(acc, "_")) {
					discardDCheckpoint(acc)
				} else {
					if (matchRange(acc, 48, 57)) {
						discardDCheckpoint(acc)
					} else {
						restoreDCheckpoint(acc)
					}
				}
			}
		}
	}
}

parse_string(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		acc.starti ::= acc.i;
		pushDCheckpoint(acc);
		if ((if (if ((matchString(acc, "\"")) && ((parseStar(acc, \ -> {
			parse_onechar_(acc)
		})) && (matchString(acc, "\"")))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}) {
			{
				addMatched(acc, substring(acc.input, acc.starti, acc.i - acc.starti));
				true
			}
		} else {
			false
		}) && (parse_ws(acc))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_onechar_(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if (parse_backslash(acc)) {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if ((matchString(acc, "u")) && ((parse_hexdigit(acc)) && ((parse_hexdigit(acc)) && ((parse_hexdigit(acc)) && (parse_hexdigit(acc)))))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((matchString(acc, "X")) && ((parse_hexdigit(acc)) && ((parse_hexdigit(acc)) && ((parse_hexdigit(acc)) && (parse_hexdigit(acc)))))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((matchString(acc, "x")) && ((parse_hexdigit(acc)) && (parse_hexdigit(acc)))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									if (parse_escapedchar_(acc)) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								}
							}
						}
					}
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if (if (if (matchString(acc, "\"")) {
					restoreDCheckpoint(acc)
				} else {
					{
						restoreDCheckpoint(acc);
						true
					}
				}) {
					{
						pushDCheckpoint(acc);
						if ((if (parse_backslash(acc)) {
							restoreDCheckpoint(acc)
						} else {
							{
								restoreDCheckpoint(acc);
								true
							}
						}) && (parse_anychar(acc))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}
	}
}

parse_escapedchar_(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (parse_backslash(acc)) {
			discardDCheckpoint(acc)
		} else {
			if (matchString(acc, "\"")) {
				discardDCheckpoint(acc)
			} else {
				if (matchString(acc, "n")) {
					discardDCheckpoint(acc)
				} else {
					if (matchString(acc, "t")) {
						discardDCheckpoint(acc)
					} else {
						if (matchString(acc, "r")) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}
					}
				}
			}
		}
	}
}

parse_backslash(acc : DParseAcc<?>) -> bool {
	matchString(acc, "\\")
}

parse_anychar(acc : DParseAcc<?>) -> bool {
	matchRange(acc, 0, 65535)
}

parse_double(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		pushDCheckpoint(acc);
		if (if ((parse_int(acc)) && (matchString(acc, "."))) {
			{
				pushDCheckpoint(acc);
				if (parse_int(acc)) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				};
				discardDCheckpoint(acc)
			}
		} else {
			restoreDCheckpoint(acc)
		}) {
			discardDCheckpoint(acc)
		} else {
			{
				pushDCheckpoint(acc);
				if (if ((matchString(acc, ".")) && (parse_int(acc))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}
	}
}

parse_int(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((matchRange(acc, 48, 57)) && (parseStar(acc, \ -> {
			matchRange(acc, 48, 57)
		}))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_ws(acc : DParseAcc<?>) -> bool {
	parseStar(acc, \ -> {
		parse_s(acc)
	})
}

parse_s(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((parse_cs(acc)) && (parseStar(acc, \ -> {
			parse_cs(acc)
		}))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}

parse_cs(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if (matchString(acc, " ")) {
			discardDCheckpoint(acc)
		} else {
			if (matchString(acc, "\t")) {
				discardDCheckpoint(acc)
			} else {
				if (matchString(acc, "\n")) {
					discardDCheckpoint(acc)
				} else {
					{
						pushDCheckpoint(acc);
						if (if ((parse_lastLineComment(acc)) && (matchString(acc, "\n"))) {
							discardDCheckpoint(acc)
						} else {
							restoreDCheckpoint(acc)
						}) {
							discardDCheckpoint(acc)
						} else {
							{
								pushDCheckpoint(acc);
								if (if ((matchString(acc, "/*")) && ((parseStar(acc, \ -> {
									{
										pushDCheckpoint(acc);
										pushDCheckpoint(acc);
										if ((if (matchString(acc, "*/")) {
											restoreDCheckpoint(acc)
										} else {
											{
												restoreDCheckpoint(acc);
												true
											}
										}) && (parse_anychar(acc))) {
											discardDCheckpoint(acc)
										} else {
											restoreDCheckpoint(acc)
										}
									}
								})) && (matchString(acc, "*/")))) {
									discardDCheckpoint(acc)
								} else {
									restoreDCheckpoint(acc)
								}) {
									discardDCheckpoint(acc)
								} else {
									if (matchString(acc, "\u000d")) {
										discardDCheckpoint(acc)
									} else {
										restoreDCheckpoint(acc)
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

parse_lastLineComment(acc : DParseAcc<?>) -> bool {
	{
		pushDCheckpoint(acc);
		if ((matchString(acc, "//")) && (parseStar(acc, \ -> {
			{
				pushDCheckpoint(acc);
				pushDCheckpoint(acc);
				if ((if (matchString(acc, "\n")) {
					restoreDCheckpoint(acc)
				} else {
					{
						restoreDCheckpoint(acc);
						true
					}
				}) && (parse_anychar(acc))) {
					discardDCheckpoint(acc)
				} else {
					restoreDCheckpoint(acc)
				}
			}
		}))) {
			discardDCheckpoint(acc)
		} else {
			restoreDCheckpoint(acc)
		}
	}
}








































































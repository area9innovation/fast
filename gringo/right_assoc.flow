import gringo/gringo_ast;

export {
	// Turns ((a | b) | c)  into (a | (b | c))
	rightAssociateGTerm(g : GTerm) -> GTerm;
}

rightAssociateGTerm(g : GTerm) -> GTerm {
	switch (g) {
		GChoice(a, b): {
			ra = rightAssociateGTerm(a);
			rb = rightAssociateGTerm(b);
			switch (ra) {
				GChoice(ra0, ra1): {
					GChoice(ra0, rightAssociateGTerm(GChoice(ra1, rb)));
				}
				default: {
					GChoice(ra, rb);
				}
			}
		}
		GRule(id, term, body): GRule(id, rightAssociateGTerm(term), rightAssociateGTerm(body));
		GSeq(a, b): {
			ra = rightAssociateGTerm(a);
			rb = rightAssociateGTerm(b);
			switch (ra) {
				GSeq(ra0, ra1): {
					GSeq(ra0, rightAssociateGTerm(GSeq(ra1, rb)));
				}
				default: {
					GSeq(ra, rb);
				}
			}
		}
		GStar(term): GStar(rightAssociateGTerm(term));
		GPlus(term): GPlus(rightAssociateGTerm(term));
		GOpt(term): GOpt(rightAssociateGTerm(term));
		GNegate(term): GNegate(rightAssociateGTerm(term));
		GUnquote(term): GUnquote(rightAssociateGTerm(term));
		GString(text): g;
		GRange(lower, upper): g;
		GVar(id, power): g;
		GEpsilon(): g;
	}
}

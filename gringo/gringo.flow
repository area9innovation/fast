import gringo/gringo_pretty;
import gringo/gringo_grammar;
import gringo/gringo_parse;
import gringo/expand;
import gringo/left_recursion;
import gringo/prefix;

main() {
	grammar1 = 
		gseq([
			GRule("exp", 
				gchoices([
					gseq([
						GVar("exp", 1),
						GString("+"),
						GVar("exp", 2),
						GUnquote(GString("+")),
					]),
					gseq([
						GVar("exp", 3),
						GString("*"),
						GVar("exp", 4),
						GUnquote(GString("*")),
					]),
					GUnquote(GPlus(GRange(48, 57))),
				]),
			),
			GVar("exp", 0)
		]);
	text1 = "4+1*2+3";

	grammar2 = gringoGrammar();
	text2 = "#include gringo/gringo2.gringo";

	// What example to run?
	grammar = grammar2;
	text = text2;

	env = GringoEnv(
		text, makeTree(), 0, "", false, 
		true	// Verbose or not
	);

	if (true) {
		println("Original:");
		println(gterm2string(grammar));
	}

	egrammar = expandPowers(grammar);
	if (false) {
		println("Expanded:");
		println(gterm2string(egrammar));
	}
	pgrammar = commonPrefix(egrammar);
	lgrammar = rewriteLeftRecursion(pgrammar);
	if (true) {
		println("Left recursion:");
		println(gterm2string(lgrammar));
	}

	if (false) {
		genv = gringoParse(env, lgrammar);

		println("");

		if (genv.fail) {
			println("Parsing failed");
		}
		remaining = strRight(env.input, genv.i);
		if (remaining != "") {
			println("Did not parse: " + remaining);
		}
		println("Output: " + genv.output);

	}
	quit(0);
}

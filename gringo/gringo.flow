import gringo/gringo_pretty;
import gringo/gringo_grammar;
import gringo/gringo_parse;
// import gringo/expand;
import gringo/cse;
import gringo/left_recursion;
import gringo/right_assoc;
import gringo/prefix;
import gringo/gringo_ast_actions;

main() {
	grammar1 = 
		GRule("exp", 
			gchoices([
				gseq([GVar("exp"), GString("+"), GVar("exp"), GUnquote(GString("+"))]),
				gseq([GVar("exp"), GString("-"), GVar("exp"), GUnquote(GString("-"))]),
				gseq([GVar("exp"), GString("*"), GVar("exp"), GUnquote(GString("*"))]),
				gseq([GVar("exp"), GString("/"), GVar("exp"), GUnquote(GString("/"))]),
				gseq([GString("-"), GVar("exp"), GUnquote(GString("neg"))]),
				gseq([GString("("), GVar("exp"), GString(")"), GUnquote(GString("par"))]),
				gseq([GString("if"), GVar("exp"), GVar("exp"), GString("else"), GVar("exp"), GUnquote(GString("ifelse"))]),
				GUnquote(GPlus(GRange(48, 57))),
			]),
			GVar("exp")
		);
	text1 = "if(1)3else4";

	grammar2 = gringoGrammar();
	text2 = if (false) "#include gringo/gringo2.gringo" else "#include gringo/exp.gringo";

	// What example to run?
	gringoGrammar = true;
	grammar = if (gringoGrammar) grammar2 else grammar2;
	text = if (gringoGrammar) text2 else text1;
	verbose = false;

	if (false) {
		env1 = doGringoParse(grammar, forthAction, "", text, verbose, false);
		println(env1.output);
	}

	if (true) {
		debugAct = debugActions(gringoAstAction, \acc -> {
			gterm2string(getAstResult(acc))
		});
		env2 = doGringoParse(grammar, if (true) gringoAstAction else debugAct, GringoAstAcc(makeList()), text, verbose, false);

		// OK, we have the result of our grammar. Try to parse using this one
		resGrammar = getAstResult(env2.output);
		println(gterm2string(getAstResult(env2.output)));

		if (true) {
			// OK, try to parse with the result
			text3 = "1+2";
			env3 = doGringoParse(resGrammar, forthAction, "", text3, false, true);
			println(env3.output);
		}

		if (false) {
			// OK, try to parse with the result
			env3 = doGringoParse(resGrammar, if (true) gringoAstAction else debugAct, GringoAstAcc(makeList()), text, verbose, false);
			println(gterm2string(getAstResult(env3.output)));
		}

		// println(gterm2string(grammar));

	}

	quit(0);
}

doGringoParse(grammar : GTerm, actions : GringoAction<?>, output : ?, text : string, verbose : bool, debugGrammar : bool) -> GringoEnv<?> {
	env = GringoEnv(text, makeTree(), 0, actions, output, false, verbose);

	if (false) {
		println("Original:");
		println(gterm2string(grammar));
	}

	egrammar = reduceCommon(grammar); //expandPowers(grammar);
	if (false) {
		println("Expanded:");
		println(gterm2string(egrammar));
	}
	pgrammar = commonPrefix(egrammar);
	rgrammar = rightAssociateGTerm(pgrammar);
	lgrammar = rewriteLeftRecursion(rgrammar);
	// Do CSE again
	ogrammar = reduceCommon(lgrammar);
	if (debugGrammar) {
		println("Fully optimized:");
		println(gterm2string(ogrammar));
	}

	if (true) {
		genv = gringoParse(env, ogrammar);

		println("");

		if (genv.fail) {
			println("Parsing failed");
		}
		remaining = strRight(env.input, genv.i);
		if (remaining != "") {
			println("Did not parse: " + remaining);
		}
		genv;
	} else {
		env;
	}
}

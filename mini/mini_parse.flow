import mini/mini_db;
import text/serialize;
import mini/mini_stack;
import mini/mini_value;

export {
	parseMiniFile(file : string, path : string, db : MiniDb) -> MiniDb;
}

parseMiniFile(file : string, path : string, db : MiniDb) -> MiniDb {
	content = getFileContent(path);
	lines = strSplit(content, "\n");
	fold(lines, db, \acc, line -> {
		miniLine(acc, line)
	});
}

miniLine(db : MiniDb, line : string) -> MiniDb {
	fchar = getCharAt(line, 0);
	if (line == "") db
	else if (startsWith(line, "\"")) {
		str = deserializeString(line);
		pushMiniValue(db, MiniString(str.first));
	} else if (("0" <= fchar && fchar <= "9") || fchar == ".") {
		if (strContains(line, ".") || strContains(line, "e")) {
			d = s2d(line);
			pushMiniValue(db, MiniDouble(d));
		} else {
			i = s2i(line);
			pushMiniValue(db, MiniInt(i));
		}
	} else if (line == "import") {
		file = popMiniValue(db);
		pushMiniDb(file.second, MiniFile(getMiniString(file.first)));
	} else {
		db.onError("Does not handle " + line);
		db;
	}
}

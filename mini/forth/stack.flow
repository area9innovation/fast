import mini/forth/forth;

export {
	pushMStack(f : MiniForth, val : MiniExp) -> MiniForth;
	popMStack(f : MiniForth) -> Pair<MiniExp, MiniForth>;
}

pushMStack(f : MiniForth, val : MiniExp) -> MiniForth {
	MiniForth(f with stack = Cons(val, f.stack));
}

popMStack(f : MiniForth) -> Pair<MiniExp, MiniForth> {
	switch (f.stack) {
		EmptyList(): Pair(MiniInt(-1), f)
		Cons(h, t): {
			Pair(h, MiniForth(f with stack = t))
		}
	}
}

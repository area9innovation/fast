import mini/commands/db;
import mini/exp/dependencies;
import ds/treeutils;

export {
	updateMiniDeps(pr : MiniAst, id : string, body : MiniExp) -> MiniAst;
}	

updateMiniDeps(pr : MiniAst, id : string, body : MiniExp) -> MiniAst {
	npr = removeMiniDeps(pr, id);
	addMiniDeps(npr, id, body)
}

addMiniDeps(pr : MiniAst, id : string, body : MiniExp) -> MiniAst {
	deps = extractMiniDeps(body, makeSet(), makeSet());
	// println(id + " depends on " + strGlue(set2array(deps), ", "));
	MiniAst(pr with
		dependencies = setTree(pr.dependencies, id, deps),
		dependents = foldSet(deps, pr.dependents, \acc, dep -> {
			insertMultimap(acc, dep, id)
		})
	)
}

removeMiniDeps(pr : MiniAst, id : string) -> MiniAst {
	deps = lookupMultimap(pr.dependencies, id);
	MiniAst(
		pr with
		dependencies = removeFromTree(pr.dependencies, id),
		dependents = foldSet(deps, pr.dependents, \acc, dep -> {
			removeMultimap(acc, dep, id)
		})
	);
}

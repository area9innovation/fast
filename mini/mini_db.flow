import mini/mini_ast;
import ds/set;

export {
	MiniDb(
		// The include path we should use
		includes : [string],
		// The queue of stuff this compiler needs to work on.
		queue : [Mini],

		// TODO: Rename to pending declarations: Those that are not type-checked yet?
		declarations : Tree<string, MiniDeclaration>,

		// TODO: Add last known good, typed declarations: 
		// These are typed versions of the values, that are known good for each backend?

		// This is the evaluation stack for the compiler itself
		stack : [MiniValue],

		// TODO: Add a dependency graph here for the last-known good set

		// TODO: Add a set of outputs we are producing

		// TODO: Add a set of names which have errors. Change this interface accordingly:
		onError : (string) -> void,
	);

	pushMiniDb(db : MiniDb, mini : Mini) -> MiniDb;
}

pushMiniDb(db : MiniDb, mini : Mini) -> MiniDb {
	MiniDb(db with queue = arrayPush(db.queue, mini));
}

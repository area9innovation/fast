import mini/exp/ast;
import mini/types/type2;
import mini/types/restype;

export {
	// The environment used when doing type inference
	MiniTypeEnv(
		// The program we are typing
		ast : MiniAst,
		// The types of local ids so far
		localTypes : Tree<string, MiniType2>,

		// For the MLSub algorithm, we keep track of bounds:
		tyvarLowerBounds : ref Tree<int, Set<MiniType2>>,
		tyvarUpperBounds : ref Tree<int, Set<MiniType2>>,

		// What is the next tyvar id?
		tyvarId : ref int,

		// What are the tyvars bound to in terms of resolved types?
		// This is set by the resolution
		tyvars : ref Tree<int, MiniType2>,

		// Map to handle top-level polymorphism (does not work yet)
		typars : ref MiniTypeParMap,

		// We keep a cache of constraints to avoid infinite loops
		constraintCache : ref Set<Pair<MiniType2, MiniType2>>,
	);

	MiniTypeParMap(
		// Map from type par to type var id
		typars : Tree<string, int>,
		// From type var id to type par
		tyvars : Tree<int, string>
	);	
}

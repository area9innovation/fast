import mini/exp/pretty_typed;

export {
	debugMiniTypeEnv(env : MiniTypeEnv) -> void;

	debugMiniType(env : MiniTypeEnv, type : MiniType2) -> string;
}

debugMiniTypeEnv(env : MiniTypeEnv) -> void {
	println("Local types:");
	traverseInOrder(env.localTypes, \name, type -> {
		println(name + " : " + debugMiniType(env, type));
	});

	println("Type vars:");
	generate(1, ^(env.tyvarId), \id -> {
		println(miniPrettyTypeVar(env, id));
	});
	{}
}

debugMiniType(env : MiniTypeEnv, type : MiniType2) -> string {
	switch (type) {
		MiniType2Var(id): {	
			miniPrettyTypeVar(env, id);
		}
		default: " : " + mtype2string(type);
	}
}

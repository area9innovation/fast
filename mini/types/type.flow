export {
	// The type languages used by the type inference
	MiniType ::= MiniTypeInt, MiniTypeFunction, MiniTypeCall, MiniTypeVar, MiniTypePar, MiniTypeRecord;

		// Corresponds to MiniType's
		MiniTypeInt(bits : int);

		MiniTypeFunction(args : [MiniType], returnType : MiniType);

		// double, string, array, ref, structs, unions are all calls
		MiniTypeCall(id : string, typars : [MiniType]);

		// Used internally in the inference
		MiniTypeVar(id : int);

		// Polymorphism - TODO: It might be a good idea to add a type-var here
		MiniTypePar(id : string);

		// An (anonymous) record type
		MiniTypeRecord(fields : [MiniTypeField]);
			MiniTypeField(name : string, isMutable : bool, type : MiniType);

	// The definition of a union
	// TODO: typars : [MiniTypePar] and typenames : [MiniCall] instead
	MiniUnion(name : string, typars : [MiniType], typenames : [MiniType]);
}

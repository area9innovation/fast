exp = 
	// Sequence
	"{" ws $"nil" exp $"cons" (";" ws exp $"cons")* (";" ws)? "}" ws $$";" $"var" $"swap" $"call"
	| "{" ws $"nil" "}" ws  $$";" $"var" $"swap" $"call"

	|> id ws "=" ws exp ";" ws exp $"let"
	|> '\' funargs ws "->" ws exp $"lambda"
	|> exp "(" ws exps ")" ws $"call"
	|> (
		"(" ws exp ")" ws 
		| id ws $"var"
		| $('0'-'9'+ "." '0'-'9'*) $"s2d"
		| $("." '0'-'9'+) $"s2d"
		| int ws $"s2i"
	);

exps = $"nil" exp $"cons" ("," ws exp $"cons")* ("," ws)?
	| $"nil";

funargs = $"nil" (id ws $"cons")*;

id = $(('a'-'z' | 'A'-'Z' | '_') ('a'-'z' | 'A'-'Z' | '0'-'9' | '_')*);
int = $'0'-'9'+;

ws = s*;
s = " " | "	" | "
";
exp

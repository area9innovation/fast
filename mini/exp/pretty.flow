import mini/exp/exp;
import text/blueprint;

export {
	miniPretty(m : MiniExp) -> string;
}

miniPretty(m : MiniExp) -> string {
	switch (m) {
		MiniInt(value, __, __): i2s(value);
		MiniDouble(value, __): d2s(value);
		MiniString(value, __): toString(value);
		MiniVar(name, __): name;
		MiniLet(name, value, body, __): blueprint("
			%name% = %value%;
			%body%",
			[ "name", name,
			  "value", miniPretty(value),
			  "body", miniPretty(body)]
		);
		MiniLambda(args, body, __): blueprint("
			\\%args% -> {
				%body%
			}",
			[ "args", strGlue(args, ", "),
			  "body", miniPretty(body)]
		);
		MiniCall(fn, args, __): miniPretty(fn) + "(" + superglue(args, miniPretty, ", ") + ")";
	}
}

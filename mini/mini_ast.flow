export {
	Mini ::= MiniFilename, MiniExp;

	MiniFilename(name : string);

	MiniExp ::= MiniValue, MiniVar, MiniLet, MiniLambda, MiniCall, MiniType;
		MiniVar(name : string);
		MiniLet(name : string, value : MiniExp, body : MiniExp);
		MiniLambda(args : [string], body : MiniExp);
		MiniCall(fn : MiniExp, args : [MiniExp]);

	MiniValue ::= MiniInt, MiniDouble, MiniString;
		MiniInt(value : int);
		MiniDouble(value : double);
		MiniString(value : string);

	MiniType ::= MiniTypeInt, MiniTypeFunction, MiniTypeCall;
		// 0 bits is void, 1 is bool.
		MiniTypeInt(bits : int);
		MiniTypeFunction(args : [MiniExp], returnType : MiniExp);
		MiniTypeCall(id : string, typars : [MiniExp]);

		// TODO: Should we have inline type here?
		// Nah, it can be some call
}
